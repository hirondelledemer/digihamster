"use strict";(self.webpackChunkdigihamster=self.webpackChunkdigihamster||[]).push([[6497],{"./src/app/components/TodayHabit/TodayHabit.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>TodayHabit_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),utils=(__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),__webpack_require__("./src/app/components/utils/index.ts")),ui_button=__webpack_require__("./src/app/components/ui/button.tsx"),use_habits=__webpack_require__("./src/app/utils/hooks/use-habits.tsx"),differenceInDays=__webpack_require__("./node_modules/date-fns/differenceInDays.mjs"),formatDistanceStrict=__webpack_require__("./node_modules/date-fns/formatDistanceStrict.mjs");const TodayHabit=({testId,habit,date})=>{const todayTimestamp=date.getTime(),{addLog}=(0,use_habits.Ay)(),handleCompleteClick=completed=>{addLog(habit._id,{completed,at:todayTimestamp})},lastLog=habit.log.findLast((log=>log.at<date.getTime()&&log.completed)),diff=lastLog?(0,differenceInDays.c)(date,lastLog.at):29,formattedDiff=lastLog?(0,formatDistanceStrict.k)(lastLog.at,date,{unit:"day",addSuffix:!0}):"never",averageAcceptableDiff=28/habit.timesPerMonth,readyIn=Math.floor(averageAcceptableDiff-diff);return(0,jsx_runtime.jsx)("div",{"data-testid":testId,children:(0,jsx_runtime.jsxs)("div",{className:(0,utils.cn)(["grid grid-cols-3 gap-4 italic mt-4"]),children:[readyIn>0?(0,jsx_runtime.jsxs)("div",{className:"text-xs",children:["ready in ",readyIn," days"]}):(0,jsx_runtime.jsx)("div",{className:(0,utils.cn)("text-xs",diff>averageAcceptableDiff?"text-primary ":""),children:formattedDiff}),(0,jsx_runtime.jsx)("div",{children:habit.title}),(0,jsx_runtime.jsxs)("div",{className:"flex justify-end self-baseline",children:[(0,jsx_runtime.jsx)(ui_button.$,{onClick:()=>handleCompleteClick(!1),variant:"ghost",className:"p-2 h-5",children:"No"}),(0,jsx_runtime.jsx)(ui_button.$,{onClick:()=>handleCompleteClick(!0),variant:"ghost",className:"p-2 h-5",children:"Yes"})]})]})})},TodayHabit_TodayHabit=TodayHabit;TodayHabit.__docgenInfo={description:"",methods:[],displayName:"TodayHabit",props:{testId:{required:!1,tsType:{name:"string"},description:""},habit:{required:!0,tsType:{name:"Habit"},description:""},date:{required:!0,tsType:{name:"Date"},description:""}}};var date=__webpack_require__("./src/app/utils/date/date.ts"),lifeAspect=__webpack_require__("./src/app/utils/mocks/lifeAspect.ts");const TodayHabit_stories={title:"Example/TodayHabit",component:TodayHabit_TodayHabit,tags:["autodocs"]},Default={args:{habit:{_id:"habit1",title:"Habit 1",deleted:!1,log:[],category:(0,lifeAspect.Ib)()._id,timesPerMonth:2,updatedAt:""},date:(0,date.tB)()}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: defaultArgs\n}",...Default.parameters?.docs?.source}}}},"./src/app/components/ui/button.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>Button,r:()=>buttonVariants});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),_radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@radix-ui/react-slot/dist/index.mjs"),class_variance_authority__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/class-variance-authority/dist/index.mjs"),_app_components_utils__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/app/components/utils/index.ts");const buttonVariants=(0,class_variance_authority__WEBPACK_IMPORTED_MODULE_2__.F)("inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50",{variants:{variant:{default:"bg-primary text-primary-foreground shadow hover:bg-primary/90",destructive:"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90",outline:"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground",secondary:"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80",ghost:"hover:bg-accent hover:text-accent-foreground",link:"text-primary underline-offset-4 hover:underline"},size:{default:"h-9 px-4 py-2",sm:"h-8 rounded-md px-3 text-xs",lg:"h-10 rounded-md px-8",icon:"h-9 w-9"}},defaultVariants:{variant:"default",size:"default"}}),Button=react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((({className,variant,size,asChild=!1,...props},ref)=>{const Comp=asChild?_radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_3__.DX:"button";return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Comp,{className:(0,_app_components_utils__WEBPACK_IMPORTED_MODULE_4__.cn)(buttonVariants({variant,size,className})),ref,...props})}));Button.displayName="Button",Button.__docgenInfo={description:"",methods:[],displayName:"Button",props:{asChild:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}}},composes:["VariantProps"]}},"./src/app/components/ui/use-toast.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{dj:()=>useToast});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");let count=0;const toastTimeouts=new Map,addToRemoveQueue=toastId=>{if(toastTimeouts.has(toastId))return;const timeout=setTimeout((()=>{toastTimeouts.delete(toastId),dispatch({type:"REMOVE_TOAST",toastId})}),1e6);toastTimeouts.set(toastId,timeout)},reducer=(state,action)=>{switch(action.type){case"ADD_TOAST":return{...state,toasts:[action.toast,...state.toasts].slice(0,1)};case"UPDATE_TOAST":return{...state,toasts:state.toasts.map((t=>t.id===action.toast.id?{...t,...action.toast}:t))};case"DISMISS_TOAST":{const{toastId}=action;return toastId?addToRemoveQueue(toastId):state.toasts.forEach((toast=>{addToRemoveQueue(toast.id)})),{...state,toasts:state.toasts.map((t=>t.id===toastId||void 0===toastId?{...t,open:!1}:t))}}case"REMOVE_TOAST":return void 0===action.toastId?{...state,toasts:[]}:{...state,toasts:state.toasts.filter((t=>t.id!==action.toastId))}}},listeners=[];let memoryState={toasts:[]};function dispatch(action){memoryState=reducer(memoryState,action),listeners.forEach((listener=>{listener(memoryState)}))}function toast({...props}){const id=function genId(){return count=(count+1)%Number.MAX_SAFE_INTEGER,count.toString()}(),dismiss=()=>dispatch({type:"DISMISS_TOAST",toastId:id});return dispatch({type:"ADD_TOAST",toast:{...props,id,open:!0,onOpenChange:open=>{open||dismiss()}}}),{id,dismiss,update:props=>dispatch({type:"UPDATE_TOAST",toast:{...props,id}})}}function useToast(){const[state,setState]=react__WEBPACK_IMPORTED_MODULE_0__.useState(memoryState);return react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>(listeners.push(setState),()=>{const index=listeners.indexOf(setState);index>-1&&listeners.splice(index,1)})),[state]),{...state,toast,dismiss:toastId=>dispatch({type:"DISMISS_TOAST",toastId})}}},"./src/app/components/utils/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{cn:()=>cn});var clsx__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),tailwind_merge__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tailwind-merge/dist/bundle-mjs.mjs");function cn(...inputs){return(0,tailwind_merge__WEBPACK_IMPORTED_MODULE_0__.QP)((0,clsx__WEBPACK_IMPORTED_MODULE_1__.$)(inputs))}},"./src/app/utils/common/update-array.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function updateObjById(arr,id,updatedData){return arr.map((item=>item._id.toString()===id?{...item,...updatedData}:item))}__webpack_require__.d(__webpack_exports__,{L:()=>updateObjById})},"./src/app/utils/date/date.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{k0:()=>getTimestampsFrom,rZ:()=>getTodayWithZeroHours,tB:()=>now});var _barrel_optimize_names_subDays_date_fns__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/date-fns/subDays.mjs");const now=()=>new Date,getTodayWithZeroHours=()=>{const today=now();return today.setHours(0,0,0,0),today},getTimestampsFrom=(startingDate,howMany)=>{const array=[];for(let i=0;i<=howMany;i++)array.push((0,_barrel_optimize_names_subDays_date_fns__WEBPACK_IMPORTED_MODULE_0__.e)(startingDate,i).getTime());return array.reverse()}},"./src/app/utils/hooks/use-habits.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>useHabits,HL:()=>HabitsContext});__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js");var react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");__webpack_require__("./node_modules/axios/lib/axios.js"),__webpack_require__("./src/app/components/ui/use-toast.ts"),__webpack_require__("./src/app/utils/common/update-array.ts");const HabitsContext=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({data:[],setData:()=>{},loading:!1,updateHabit:()=>{},createHabit:()=>{},deleteHabit:()=>{},addLog:()=>{}}),{Provider}=HabitsContext;function useHabits(){const{data,setData,updateHabit,createHabit,addLog,deleteHabit}=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(HabitsContext);return{data,setData,updateHabit,createHabit,addLog,deleteHabit}}},"./src/app/utils/mocks/lifeAspect.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ib:()=>generateLifeAspect,y$:()=>generateListOfLifeAspects});const generateLifeAspect=(i=1,properties)=>({_id:`lifeAspect${i}`,title:`Life Aspect ${i}`,deleted:!1,boosts:[],updatedAt:"",asset:"tree",...properties}),generateListOfLifeAspects=count=>[...Array(count)].map(((_v,i)=>generateLifeAspect(i)))}}]);